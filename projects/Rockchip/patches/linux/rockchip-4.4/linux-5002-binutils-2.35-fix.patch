From: Changbin Du @ 2020-01-28 15:29 UTC (permalink / raw)
  To: Peter Zijlstra, Ingo Molnar, Arnaldo Carvalho de Melo, Jiri Olsa
  Cc: linux-kernel, Changbin Du

libbfd has changed the bfd_section_* macros to inline functions
bfd_section_<field> since 2019-09-18. See below two commits:
  o http://www.sourceware.org/ml/gdb-cvs/2019-09/msg00064.html
  o https://www.sourceware.org/ml/gdb-cvs/2019-09/msg00072.html

This fix make perf able to build with both old and new libbfd.

Signed-off-by: Changbin Du <changbin.du@gmail.com>

diff -rupN linux-82c9666cb6fe999eb61f23c2c9d0d5dad7332fb6/tools/perf/util/srcline.c linux-patched/tools/perf/util/srcline.c
--- linux-82c9666cb6fe999eb61f23c2c9d0d5dad7332fb6/tools/perf/util/srcline.c	2020-07-20 10:31:30.000000000 +0200
+++ linux-patched/tools/perf/util/srcline.c	2021-08-04 16:32:53.564900052 +0200
@@ -86,17 +86,31 @@ static void find_address_in_section(bfd
 	bfd_vma pc, vma;
 	bfd_size_type size;
 	struct a2l_data *a2l = data;
+	flagword flags;
 
 	if (a2l->found)
 		return;

-	if ((bfd_get_section_flags(abfd, section) & SEC_ALLOC) == 0)
+#ifdef bfd_get_section_flags
+	flags = bfd_get_section_flags(abfd, section);
+#else
+	flags = bfd_section_flags(section);
+#endif
+	if ((flags & SEC_ALLOC) == 0)
 		return;

 	pc = a2l->addr;
+#ifdef bfd_get_section_vma
 	vma = bfd_get_section_vma(abfd, section);
+#else
+	vma = bfd_section_vma(section);
+#endif
+#ifdef bfd_get_section_size
 	size = bfd_get_section_size(section);

+#else
+	size = bfd_section_size(section);
+#endif
 	if (pc < vma || pc >= vma + size)
 		return;
