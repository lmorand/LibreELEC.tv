diff -ruPN linux/drivers/media/rc/gpio-ir-recv.c linux-new/drivers/media/rc/gpio-ir-recv.c
--- linux/drivers/media/rc/gpio-ir-recv.c	2021-10-27 09:56:57.000000000 +0200
+++ linux-new/drivers/media/rc/gpio-ir-recv.c	2022-02-17 16:38:31.476119998 +0100
@@ -13,6 +13,7 @@
 #include <linux/platform_device.h>
 #include <linux/pm_runtime.h>
 #include <linux/pm_qos.h>
+#include <linux/pm_wakeirq.h>
 #include <linux/irq.h>
 #include <media/rc-core.h>
 
@@ -125,6 +126,11 @@
 
 	platform_set_drvdata(pdev, gpio_dev);
 
+	device_init_wakeup(dev, 1);
+	rc = dev_pm_set_wake_irq(dev, gpio_dev->irq);
+	if (rc)
+		dev_warn(dev, "failed to set up wakeup irq: %d\n", rc);
+
 	return devm_request_irq(dev, gpio_dev->irq, gpio_ir_recv_irq,
 				IRQF_TRIGGER_FALLING | IRQF_TRIGGER_RISING,
 				"gpio-ir-recv-irq", gpio_dev);
@@ -133,25 +139,25 @@
 #ifdef CONFIG_PM
 static int gpio_ir_recv_suspend(struct device *dev)
 {
-	struct gpio_rc_dev *gpio_dev = dev_get_drvdata(dev);
+/*	struct gpio_rc_dev *gpio_dev = dev_get_drvdata(dev);
 
 	if (device_may_wakeup(dev))
 		enable_irq_wake(gpio_dev->irq);
 	else
 		disable_irq(gpio_dev->irq);
-
+*/
 	return 0;
 }
 
 static int gpio_ir_recv_resume(struct device *dev)
 {
-	struct gpio_rc_dev *gpio_dev = dev_get_drvdata(dev);
+/*	struct gpio_rc_dev *gpio_dev = dev_get_drvdata(dev);
 
 	if (device_may_wakeup(dev))
 		disable_irq_wake(gpio_dev->irq);
 	else
 		enable_irq(gpio_dev->irq);
-
+*/
 	return 0;
 }
 
